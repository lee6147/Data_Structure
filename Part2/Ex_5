#include <stdio.h>

#define WHITE 0
#define BLACK 1
#define HEIGHT 10
#define WIDTH  10

// 10×10 화면을 나타내는 전역 배열
int screen[HEIGHT][WIDTH] = {
    {2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
    {2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
    {2, 2, 2, 0, 0, 0, 0, 2, 2, 2},
    {2, 2, 2, 2, 0, 0, 0, 2, 2, 2},
    {2, 2, 2, 2, 0, 0, 0, 2, 2, 2},
    {2, 2, 2, 2, 0, 0, 0, 0, 2, 2},
    {2, 2, 2, 2, 0, 2, 2, 2, 2, 2},
    {2, 2, 2, 2, 0, 2, 2, 2, 2, 2},
    {2, 2, 2, 2, 0, 2, 2, 2, 2, 2},
    {2, 2, 2, 2, 2, 2, 2, 2, 2, 2}};

/**
 * @brief (x, y) 위치와 연결된 모든 흰색(WHITE) 영역을
 * 검은색(BLACK)으로 채우는 재귀 함수
 *
 * @param x 행 좌표 (0 <= x < HEIGHT)
 * @param y 열 좌표 (0 <= y < WIDTH)
 */
void flood_fill(int x, int y) {
    // To Fill
        // (x, y) 좌표가 스크린 범위를 넘어가면 함수를 반환
    if (x < 0 || x >= HEIGHT || y < 0 || y >= WIDTH) return;
    

    // 현재 위치가 흰색이 아니라면 더 이상 수행하지 않는다.
    if (screen[x][y] != WHITE) return;
    

    // 현재 위치가 흰색이라면 검은색으로 채운다.
    screen[x][y] = BLACK;

    // 현재 위치 기준으로 상, 하, 좌, 우에 대해서 동일한 작업을 수행
    flood_fill(x - 1, y); // 상
    flood_fill(x + 1, y); // 하
    flood_fill(x, y - 1); // 좌
    flood_fill(x, y + 1); // 우
}

/**
 * @brief 10×10 screen 배열을 출력
 */
void result_print(void) {
    for (int i = 0; i < HEIGHT; i++) {
        for (int j = 0; j < WIDTH; j++) {
            printf("%d ", screen[i][j]);
        }
        printf("\n");
    }
}

int main(void) {
    int startX, startY;

    // 시작 좌표 입력 (n m)
    scanf("%d %d", &startX, &startY);

    // flood fill 수행
    flood_fill(startX, startY);

    // 결과 출력
    result_print();

    return 0;
}
